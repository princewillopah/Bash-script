
Key Exit Codes in DevOps
0 → Success

1 → General error

2 → Misuse of shell builtins

126 → Command cannot execute

127 → Command not found

130 → Script terminated by Ctrl+C







========================================================================================================================================
# Set the set -x option
========================================================================================================================================


# One of the most useful techniques for debugging Bash scripts is to set the set -x option at the beginning of the script. 
# This option enables debugging mode, which causes Bash to print each command that it executes to the terminal, preceded by a + sign. 

# --------------------------

#!/bin/bash

set -x

# Your script goes here

# --------------------------
`
i am going
`

========================================================================================================================================
# Check the exit code
========================================================================================================================================

# When Bash encounters an error, it sets an exit code that indicates the nature of the error. 
# You can check the exit code of the most recent command using the $? variable. 
# A value of 0 indicates success, while any other value indicates an error.

# --------------------------
#!/bin/bash

# Your script goes here

if [ $? -ne 0 ]; then
    echo "Error occurred."
fi
# --------------------------


========================================================================================================================================
# Use echo statements
========================================================================================================================================

# Another useful technique for debugging Bash scripts is to insert echo statements throughout your code. 
# This can help you identify where errors are occurring and what values are being passed to variables.

# --------------------------

#!/bin/bash

# Your script goes here

echo "Value of variable x is: $x"

# More code goes here
# --------------------------


========================================================================================================================================
# Use the set -e option
========================================================================================================================================

# If you want your script to exit immediately when any command in the script fails, you can use the set -e option. 
# This option will cause Bash to exit with an error if any command in the script fails, making it easier to identify and fix errors in your script.

# --------------------------
#!/bin/bash

set -e

# Your script goes here
# --------------------------


========================================================================================================================================
# Troubleshooting crons by verifying logs
========================================================================================================================================

We can troubleshoot crons using the log files. 
Logs are maintained for all the scheduled jobs. 
You can check and verify in logs if a specific job ran as intended or not.

For Ubuntu/Debian, you can find cronlogs at: 
/var/log/syslog

The location varies for other distributions.

2022-03-11 00:00:01 Task started
2022-03-11 00:00:02 Running script /path/to/script.sh
2022-03-11 00:00:03 Script completed successfully
2022-03-11 00:05:01 Task started
2022-03-11 00:05:02 Running script /path/to/script.sh
2022-03-11 00:05:03 Error: unable to connect to database
2022-03-11 00:05:03 Script exited with error code 1
2022-03-11 00:10:01 Task started
2022-03-11 00:10:02 Running script /path/to/script.sh
2022-03-11 00:10:03 Script completed successfully

========================================================================================================================================
# Robust Error Handling Example
========================================================================================================================================

#!/bin/bash

set -euo pipefail  # Strict mode: exits on error or undefined variable

fetch_data() {
    if ! curl -fsS "https://api.example.com/data"; then
        echo "ERROR: Failed to fetch data" >&2
        return 1
    fi
}

main() {
    if ! data=$(fetch_data); then
        exit 1
    fi
    echo "$data" | jq .  # Process data
}

main




========================================================================================================================================
# 
========================================================================================================================================






========================================================================================================================================
# 
========================================================================================================================================






========================================================================================================================================
# 
========================================================================================================================================






========================================================================================================================================
# 
========================================================================================================================================






========================================================================================================================================
# 
========================================================================================================================================






========================================================================================================================================
# 
========================================================================================================================================






========================================================================================================================================
# 
========================================================================================================================================






========================================================================================================================================
# 
========================================================================================================================================






========================================================================================================================================
# 
========================================================================================================================================






========================================================================================================================================
# 
========================================================================================================================================






========================================================================================================================================
# 
========================================================================================================================================






========================================================================================================================================
# 
========================================================================================================================================






========================================================================================================================================
# 
========================================================================================================================================






========================================================================================================================================
# 
========================================================================================================================================






========================================================================================================================================
# 
========================================================================================================================================






========================================================================================================================================
# 
========================================================================================================================================






========================================================================================================================================
# 
========================================================================================================================================






========================================================================================================================================
# 
========================================================================================================================================






========================================================================================================================================
# 
========================================================================================================================================






========================================================================================================================================
# 
========================================================================================================================================






========================================================================================================================================
# 
========================================================================================================================================






========================================================================================================================================
# 
========================================================================================================================================






========================================================================================================================================
# 
========================================================================================================================================




